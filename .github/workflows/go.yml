# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:

  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        # Provide the password for postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: "trust"
          POSTGRES_USER: "runner"
          POSTGRES_DB: "runner"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - run: .pgsql/testdb.sh
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true

      - name: Build
        run: make build

      - name: Test
        run: go test -timeout 30s -v ./...

      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: pg_subsetter
          path: dist/*
